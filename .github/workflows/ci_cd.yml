name: CI/CD

on:
  push: # A push indicates that a PR is merged and CD should be triggered
    branches:
      - wip/ts_ci_cd
  pull_request: # For PRs, we run CI, which is the same as CD without the release step(s)
    branches:
      - wip/ts_ci_cd

jobs:
  # A setup job to define the matricies that will be used across all of the jobs in this workflow
  setup:
    runs-on: ubuntu-latest
    outputs:
      # The packages that use Uniffi bindings
      ffi_packages: ${{ steps.set_ffi_packages.outputs.ffi_packages }}
    steps:
      - id: set_ffi_packages
        run: echo 'ffi_packages=["algokit_transact"]' >> $GITHUB_OUTPUT


  typescript_wasm_ci_cd:
    concurrency: ${{ github.event_name == 'push' && format('cd-{0}', github.ref) || format('ci-typescript_wasm-{0}', github.run_id) }}
    needs: setup
    uses: ./.github/workflows/typescript_wasm_ci_cd.yml
    strategy:
      matrix:
        crate: ${{ fromJSON(needs.setup.outputs.ffi_packages) }}
    with:
      crate: ${{ matrix.crate }}
      release: ${{ github.event_name == 'push' }}
    secrets:
      BOT_ID: ${{ secrets.BOT_ID }}
      BOT_SK: ${{ secrets.BOT_SK }}
  
  python_uniffi_ci_cd:
    concurrency: ${{ github.event_name == 'push' && format('cd-{0}', github.ref) || format('ci-python_uniffi-{0}', github.run_id) }}
    needs: setup
    uses: ./.github/workflows/python_uniffi_ci_cd.yml
    strategy:
      matrix:
        crate: ${{ fromJSON(needs.setup.outputs.ffi_packages) }}
    with:
      crate: ${{ matrix.crate }}
      release: ${{ github.event_name == 'push' }}
    secrets:
      BOT_ID: ${{ secrets.BOT_ID }}
      BOT_SK: ${{ secrets.BOT_SK }}
